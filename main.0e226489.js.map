{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","createMessage","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACYF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SACxCL,oBAAAA,OAAAA,EAAQM,GAFjB,UAQN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAgBC,SAASC,cAAc,OAE7CF,EAAcG,UAAUC,IAAI,WAC5BJ,EAAcK,YAAcN,EAC5BE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.0e226489.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element: ${element.nodeName},\n         id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const createMessage = document.createElement('div');\n\n  createMessage.classList.add('message');\n  createMessage.textContent = message;\n  document.body.append(createMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}